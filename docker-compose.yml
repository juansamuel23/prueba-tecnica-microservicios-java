version: '3.8'

services:
  productos-db:
    image: postgres:13-alpine
    container_name: productos_db_container
    environment:
      POSTGRES_DB: productos_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sasa
    volumes:
      - productos_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - microservices-network

  productos-service:
    build: ./productos-service # Usará el Dockerfile multi-stage en esta ruta
    container_name: productos_service_container
    ports:
      - "8081:8081" # Host:Container (Puerto de productos-service)
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://productos-db:5432/productos_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sasa
      APP_SECURITY_API_KEY: "SuperSecretaAPIKeyParaMicroservicios2025!"
    depends_on:
      - productos-db
    networks:
      - microservices-network
    restart: on-failure

  inventario-db:
    image: postgres:13-alpine
    container_name: inventario_db_container
    environment:
      POSTGRES_DB: inventario_db
      POSTGRES_USER: user # ¡Confirmar que coincide con application.yml de inventario-service!
      POSTGRES_PASSWORD: password # ¡Confirmar que coincide con application.yml de inventario-service!
    volumes:
      - inventario_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Host:Container (Puerto para acceder a inventario-db desde el host si lo necesitas)
    networks:
      - microservices-network

  inventario-service:
    build: ./inventario-service # Usará el Dockerfile multi-stage en esta ruta
    container_name: inventario_service_container
    ports:
      - "8082:8082" # Host:Container (Puerto de inventario-service)
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://inventario-db:5432/inventario_db
      SPRING_DATASOURCE_USERNAME: user # ¡Confirmar!
      SPRING_DATASOURCE_PASSWORD: password # ¡Confirmar!
      APP_SECURITY_API_KEY: "SuperSecretaAPIKeyParaMicroservicios2025!"
      PRODUCTOS_SERVICE_URL: "http://productos-service:8081" # URL interna para llamar a productos-service
    depends_on:
      - inventario-db
      - productos-service
    networks:
      - microservices-network
    restart: on-failure

volumes:
  productos_data:
  inventario_data:

networks:
  microservices-network:
    driver: bridge